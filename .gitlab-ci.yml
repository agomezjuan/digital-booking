variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_REGION: $AWS_REGION

stages:
  - build_frontend
  - build_backend
  - deploy

build_frontend:
  stage: build_frontend
  image: node:latest
  script:
    - cd ./frontend
    - npm install
    - npm run build
  artifacts:
    name: frontend_build
    paths:
      - ./frontend/dist/

build_backend:
  stage: build_backend
  image: maven:latest
  script:
    - cd ./backend
    - mvn clean package -DskipTests=true

deploy:
  stage: deploy
  needs:
    - build_frontend
    - build_backend
  image: python:latest
  script:
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_REGION
    - aws s3 sync ./frontend/dist s3://bucket-grupo4-frontend --acl public-read
    - aws s3api put-object-acl --bucket bucket-grupo4-frontend --key index.html --acl public-read
    - aws s3api put-object-acl --bucket bucket-grupo4-frontend --key favicon.ico --acl public-read
    - aws s3 sync ./frontend/dist/assets s3://bucket-grupo4-frontend/assets --acl public-read
    # - aws s3 cp ./backend/target/DigitalBooking.war s3://bucket-grupo4-backend/DigitalBooking.war
    - aws ec2 run-instances --image-id ami-024e6efaf93d85776 --count 1 --instance-type t2.micro --key-name grupo4-keypair-ec2-backend --security-group-ids sg-0c51fedd27dacc110 --subnet-id subnet-07388b09d5835ee84 --associate-public-ip-address --user-data "#!/bin/bash
      wget https://s3.amazonaws.com/bucket-grupo4-backend/DigitalBooking.war -O /home/ubuntu/DigitalBooking.war java -jar /home/ubuntu/DigitalBooking.war > /home/ubuntu/app.log 2>&1 &"
